<!-- https://mvnrepository.com/artifact/com.relevantcodes/extentreports -->
<dependency>
    <groupId>com.relevantcodes</groupId>
    <artifactId>extentreports</artifactId>
    <version>2.41.2</version>
</dependency>

///////////extentreport-config(ReportsConfig.xml)///////////////
<?xml version="1.0" encoding="UTF-8"?>
<extentreports>
    <configuration>
        <!-- report theme -->
        <!-- standard, dark -->
        <theme>standard</theme>
    
        <!-- document encoding -->
        <!-- defaults to UTF-8 -->
        <encoding>UTF-8</encoding>
        
        <!-- protocol for script and stylesheets -->
        <!-- defaults to https -->
        <protocol>https</protocol>
        
        <!-- title of the document -->
        <documentTitle>Extent</documentTitle>
        
        <!-- report name - displayed at top-nav -->
        <reportName>Automation Report</reportName>
        
        <!-- location of charts in the test view -->
        <!-- top, bottom -->
        <testViewChartLocation>bottom</testViewChartLocation>
        
        <!-- custom javascript -->
        <scripts>
            <![CDATA[
                $(document).ready(function() {
                    
                });
            ]]>
        </scripts>
        
        <!-- custom styles -->
        <styles>
            <![CDATA[
                
            ]]>
        </styles>
    </configuration>
</extentreports>

/////////////////////////////////////////////////////////

/////////////ExtentManager.java///////////////////

package com.ad.utilities;

import java.io.File;

import com.relevantcodes.extentreports.DisplayOrder;
import com.relevantcodes.extentreports.ExtentReports;

public class ExtentManager {

	private static ExtentReports extent;
	
	public static ExtentReports getInstance(){
		
		if(extent == null){
			
			extent = new ExtentReports(System.getProperty("user.dir")+"\\target\\surefire-reports\\html\\extent.html", true, DisplayOrder.OLDEST_FIRST);
			extent.loadConfig(new File(System.getProperty("user.dir")+"\\src\\test\\resources\\extentconfig\\ReportsConfig.xml"));
			
		}
		
		return extent;
		
	}
}

///////////////////////////////////////////////////////////

//////////TestBase.java///////////////////

public ExtentReports exRepo = ExtentManager.getInstance();
public static ExtentTest test;

//////////////////////////////////////////////////////////

//////////Listener class////////////

package com.ad.listeners;

import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;
import org.testng.Reporter;
import com.ad.utilities.CaptureScreenShotUtil;

import com.ad.base.TestBase;
import com.relevantcodes.extentreports.LogStatus;

/*
 * 
 
•	onStart is invoked first.
•	onTestStart is called once for each test before it is invoked.
•	onTestSuccess is invoked whenever a test passes. In our example, t1 always passes whereas, t4 passes three times.
•	onTestFailure is called for t2 as t2 will always fail. It is also called for t4 as it fails twice out of five times that it is invoked.
•	onTestSkipped is called once for t3 as it is bound to skip.
•	onTestFailedButWithinSuccessPercentage is called once for t4, the first time it fails. It is not called again as it doesn’t match the requested successPercentage of 80
•	Finally onFinish is called once when the tests are all run.

 * 
 * */

public class TestListenerForExtentReport extends TestBase implements ITestListener {

	@Override
	public void onFinish(ITestContext context) {
		// TODO Auto-generated method stub
	}

	@Override
	public void onStart(ITestContext context) {
		// TODO Auto-generated method stub
	}

	@Override
	public void onTestFailedButWithinSuccessPercentage(ITestResult arg0) {
		// TODO Auto-generated method stub
	}

	@Override
	public void onTestFailure(ITestResult Result) {
		// TODO Auto-generated method stub
		/*System.setProperty("org.uncommons.reportng.escape-output","false");
		String screenShotPath = CaptureScreenShotUtil.captureScreenShot();
		Reporter.log("<a href="+screenShotPath+">Screenshot</a>");*/
		test.log(LogStatus.FAIL, Result.getThrowable());
		test.log(LogStatus.FAIL, Result.getName().toUpperCase()+" Failed. Snapshow below: "+test.addScreenCapture(screenShotPath));
		exRepo.endTest(test);
		exRepo.flush();
	}

	@Override
	public void onTestSkipped(ITestResult Result) {
		// TODO Auto-generated method stub
		test.log(LogStatus.SKIP, Result.getName().toUpperCase()+" Skipped.");
		exRepo.endTest(test);
		exRepo.flush();
	}

	@Override
	public void onTestStart(ITestResult Result) {
		// TODO Auto-generated method stub
		test = exRepo.startTest(Result.getName().toUpperCase());
	}

	@Override
	public void onTestSuccess(ITestResult Result) {
		// TODO Auto-generated method stub
		test.log(LogStatus.PASS, Result.getName().toUpperCase()+" Passed.");
		exRepo.endTest(test);
		exRepo.flush();
	}
	
	

}
////////////////////////////////////////////////

You can use this 'test' object of TestBase class in any scenario class or anywhere by extending TestBase and can log the 
information to show them on extent report.
////////////////////////////////////////////////////

///////// testng.xml ////////////
<listeners>
		<listener class-name="com.ad.listeners.TestListenerForExtentReport"/>
</listeners>
