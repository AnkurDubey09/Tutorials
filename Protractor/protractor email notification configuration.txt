Custom email notification configuration using Protractor testing framework:

nodemailer:

1- We have to install nodemailer by running following command

npm i nodemailer

2- Now after, it is installed, we have to configure email options in the below code, this could be saved as mail.js.

const nodemailer = require('nodemailer');


// Generate test SMTP service account from ethereal.email
// Only needed if you don't have a real mail account for testing
nodemailer.createTestAccount((err, account) => {
    // create reusable transporter object using the default SMTP transport
    let transporter = nodemailer.createTransport({
        host: 'my.smtp.com',
        port: 25,
        secure: false // true for 465, false for other ports  
    });

    // setup email data with unicode symbols
    let mailOptions = {
        from: 'email_from@domain.com', // sender address
        to: ['email_to@domain.com','',''], // list of receivers
        subject: 'Automated email ✔ E2E Status ✔', // Subject line
        //text: 'Hello world', // plain text body
        html: '<b> Please find the attached files for E2E status. We are still working to get it better. Thanks.</b>', // html body
        attachments: [
            {
                'path': './reports/htmlReport.html',
            },
            {
                'path': './logs/E2E-info.log',
            },
            {
                'path': './logs/E2E-error.log',
            }
        ]
    };

    // send mail with defined transport object
    transporter.sendMail(mailOptions, (error, info) => {
        if (error) {
            return console.log(error);
        }
        console.log('Message sent: %s', info.messageId);
        // Preview only available when sending through an Ethereal account
        console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));

        // Message sent: <b658f8ca-6296-ccf4-8306-87d57a0b4321@example.com>
        // Preview URL: https://ethereal.email/message/WaQKMgKddxQDoou...
    });
});

3- Now, we need to configure this on protractor.conf.js

onComplete:function () {
    console.log("Sending Mail with reports for the test execution.");
    var sys = require('util')
    var exec = require('child_process').exec;
    function puts(error, stdout, stderr) { sys.puts(stdout) }
    exec("node mail.js", puts);
}

4- After configuring this, we can verify by running 'node mail.js' command on the command prompt.
